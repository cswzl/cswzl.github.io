cs-tree {
  @include component-root-layout;

  .cs-tree {
    position: relative;
    width: 100%;
    height: 100%;
    &-small {
      font-size: 14px;
      .cs-tree-filter,
      .cs-tree-node {
        height: 24px;
      }
      .cs-tree-node-icon {
        > svg,
        > img,
        > div {
          width: 14px;
          height: 14px;
        }
      }
      .cs-tree-content {
        top: 49px;
      }
    }
    &-default {
      font-size: 16px;
      .cs-tree-filter,
      .cs-tree-node {
        height: 32px;
      }
      .cs-tree-node-icon {
        > svg,
        > img,
        > div {
          width: 16px;
          height: 16px;
        }
      }
      .cs-tree-content {
        top: 59px;
      }
    }
    &-large {
      font-size: 16px;
      .cs-tree-filter,
      .cs-tree-node {
        height: 40px;
      }
      .cs-tree-node-icon {
        > svg,
        > img,
        > div {
          width: 16px;
          height: 16px;
        }
      }
      .cs-tree-content {
        top: 67px;
      }
    }

    &-filter {
      position: absolute;
      top: 0;
      right: 0;
      left: 0;
      padding: 13px 18px;
      display: flex;
      border-bottom: 1px solid #00000017;

      > input {
        flex: 1;
      }
    }
    &-content {
      position: absolute;
      right: 0;
      bottom: 0;
      left: 0;
      overflow: auto;
    }

    cs-tree-node {
      * {
        cursor: pointer;
      }

      .cs-tree-node {
        display: flex;
        align-items: center;

        .extend-icon {
          width: 9px;
          height: 9px;
        }

        &-collect,
        &-icon {
          display: flex;
          align-items: center;
          justify-content: center;
        }
        &-collect {
          width: 16px;
        }
        &-icon {
          width: 16px;
        }
        &-label {
          flex: 1;
          display: block;
          align-items: center;
          padding: 0 2px;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
        }

        .extend-left {
          transform: rotate(90deg);
        }
        .extend-right {
          transform: rotate(180deg);
        }

        &:not(.select):hover {
          @include hover;
        }
        &:not(.select):active {
          @include active;
        }
      }

      .select {
        @include active;
      }
    }
  }
}
